<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.sell.dao.mapper.AccountCourseMapper">
    <resultMap id="accountCourse" type="com.lab.hosaily.core.sell.entity.AccountCourse">
        <id     column="id"          property="id"         javaType="java.lang.String"/>
        <result column="account_id"  property="accountId"  javaType="java.lang.String"/>
        <result column="effective"   property="effective"  javaType="java.lang.Integer"/>
        <result column="force_time"  property="forceTime"  javaType="java.util.Date"/>
        <result column="deadline"    property="deadline"   javaType="java.util.Date"/>
        <result column="state"       property="state"      typeHandler="usingStateHandler"/>
        <result column="create_time" property="createTime" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date"/>
        <association property="course"  resultMap="course"  columnPrefix="c_"/>
        <association property="user"    resultMap="user"    columnPrefix="u_"/>
    </resultMap>

    <resultMap id="course" type="com.lab.hosaily.core.course.entity.Course">
        <id     column="id"           property="id"           javaType="java.lang.String"/>
        <result column="type"         property="type"         typeHandler="courseTypeHandler"/>
        <result column="kind"         property="kind"         typeHandler="courseKindHandler"/>
        <result column="title"        property="title"        javaType="java.lang.String"/>
    </resultMap>

    <resultMap id="user" type="com.rab.babylon.core.account.entity.User">
        <id     column="id"           property="id"         javaType="java.lang.String"/>
        <result column="account_id"   property="accountId"  javaType="java.lang.String"/>
        <result column="nickname"     property="nickname"   javaType="java.lang.String"/>
        <result column="name"         property="name"       javaType="java.lang.String"/>
        <result column="code"         property="code"       javaType="java.lang.Integer"/>
        <result column="sex"          property="sex"        typeHandler="sexHandler"/>
        <result column="phone"        property="phone"      javaType="java.lang.String"/>
        <result column="head_img_url" property="headImgUrl" javaType="java.lang.String"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCriterions != null and params.andCriterions.size > 0">
                <foreach collection="params.andCriterions" item="criterion">
                    <trim prefix="AND (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCriterions != null and params.orCriterions.size > 0">
                <foreach collection="params.orCriterions" item="criterion">
                    <trim prefix="OR (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO account_course (
               id,
               account_id,
               course_id,
               effective,
               state,
               create_time,
               force_time,
               deadline
        ) VALUE (
               #{id,         jdbcType=VARCHAR},
               #{accountId,  jdbcType=VARCHAR},
               #{course.id,  jdbcType=VARCHAR},
               #{effective,  jdbcType=INTEGER},
               #{state,      typeHandler=usingStateHandler},
               #{createTime, jdbcType=TIMESTAMP},
               #{forceTime,  jdbcType=TIMESTAMP},
               #{deadline,   jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="saveBatch">
        INSERT
          INTO account_course (
               id,
               account_id,
               course_id,
               effective,
               state,
               create_time,
               force_time,
               deadline
        ) VALUES
        <foreach collection="list" item="accountCourse" separator=",">
            (
                #{accountCourse.id,         jdbcType=VARCHAR},
                #{accountCourse.accountId,  jdbcType=VARCHAR},
                #{accountCourse.course.id,  jdbcType=VARCHAR},
                #{accountCourse.effective,  jdbcType=INTEGER},
                #{accountCourse.state,      typeHandler=usingStateHandler},
                #{accountCourse.createTime, jdbcType=TIMESTAMP},
                #{accountCourse.forceTime,  jdbcType=TIMESTAMP},
                #{accountCourse.deadline,   jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE account_course
         <set>
             <if test="effective != null and effective >= 0">
                 effective = #{effective, jdbcType=INTEGER},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
             <if test="forceTime != null">
                 force_time = #{forceTime, jdbcType=TIMESTAMP},
             </if>
             <if test="deadline != null">
                 deadline = #{deadline, jdbcType=TIMESTAMP},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE
          FROM account_course
         WHERE id = #{id}
    </delete>

    <select id="findIdByParams" resultType="java.lang.String">
        SELECT ac.id
          FROM account_course ac
     LEFT JOIN account a
            ON a.id = ac.account_id
     LEFT JOIN course c
            ON c.id = ac.course_id
     LEFT JOIN user u
            ON u.account_id = ac.account_id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="findByParams" resultMap="accountCourse">
        SELECT ac.*,
               u.id           AS u_id,
               u.account_id   AS u_account_id,
               u.name         AS u_name,
               u.nickname     AS u_nickname,
               u.code         AS u_code,
               u.sex          AS u_sex,
               u.phone        AS u_phone,
               u.head_img_url AS u_head_img_url,
               c.id           AS c_id,
               c.title        AS c_title
          FROM account_course ac
     LEFT JOIN account a
            ON a.id = ac.account_id
     LEFT JOIN course c
            ON c.id = ac.course_id
     LEFT JOIN user u
            ON u.account_id = ac.account_id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM (
                  SELECT ac.id
                    FROM account_course ac
               LEFT JOIN account a
                      ON a.id = ac.account_id
               LEFT JOIN course c
                      ON c.id = ac.course_id
               LEFT JOIN user u
                      ON u.account_id = ac.account_id
                <if test="params != null">
                    <include refid="WHERE_COLUMN"/>

                    <if test="params.groups != null and params.groups.size > 0">
                        GROUP BY
                        <foreach collection="params.groups" item="group" separator=",">
                            ${group.property}
                        </foreach>
                    </if>
                </if>
        ) AS account_course
    </select>
</mapper>