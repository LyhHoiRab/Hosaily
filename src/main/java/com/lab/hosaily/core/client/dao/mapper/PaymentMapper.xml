<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.client.dao.mapper.PaymentMapper">
    <resultMap id="payment" type="com.lab.hosaily.core.client.entity.Payment">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
        <result column="purchase_id"    property="purchaseId"   javaType="java.lang.String"/>
        <result column="price"          property="price"        javaType="java.lang.Double"/>
        <result column="type"           property="type"         typeHandler="payTypeHandler"/>
        <result column="state"          property="state"        typeHandler="payStateHandler"/>
        <result column="pay_time"       property="payTime"      javaType="java.util.Date"/>
        <result column="affirm_time"    property="affirmTime"   javaType="java.util.Date"/>
        <result column="create_time"    property="createTime"   javaType="java.util.Date"/>
        <result column="update_time"    property="updateTime"   javaType="java.util.Date"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCreiterions != null and params.andCreiterions.size > 0">
                <foreach collection="params.andCreiterions" item="criterion" separator="AND">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCreiterions != null and params.orCreiterions.size > 0">
                <foreach collection="params.orCreiterions" item="criterion" separator="OR">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO payment (
               id,
               purchase_id,
               price,
               type,
               state,
               pay_time,
               affirm_time,
               create_time
        ) VALUE (
               #{id,          jdbcType=VARCHAR},
               #{purchaseId,  jdbcType=VARCHAR},
               #{price,       jdbcType=DOUBLE},
               #{type,        typeHandler=payTypeHandler},
               #{state,       typeHandler=payStateHandler},
               #{payTime,     jdbcType=TIMESTAMP},
               #{affirmTime,  jdbcType=TIMESTAMP},
               #{createTime,  jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update">
        UPDATE payment
         <set>
             <if test="price != null and price >= 0">
                 price = #{price, jdbcType=DOUBLE},
             </if>
             <if test="type != null">
                 type = #{type, typeHandler=payTypeHandler},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=payStateHandler},
             </if>
             <if test="payTime != null">
                 pay_time = #{payTime, jdbcType=TIMESTAMP},
             </if>
             <if test="affirmTime != null">
                 affirm_time = #{affirmTime, jdbcType=TIMESTAMP},
             </if>
             <if test="updateTime != null">
                 update_time = #{updaetTime, jdbcType=TIMESTAMP},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="payment">
        SELECT *
          FROM payment
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="findByParams" resultMap="payment">
        SELECT *
          FROM payment
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM payment
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="priceByPurchaseId" resultMap="java.lang.Long">
        SELECT SUM(price)
          FROM payment
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>
</mapper>