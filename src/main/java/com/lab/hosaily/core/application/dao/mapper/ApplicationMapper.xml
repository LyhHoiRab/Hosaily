<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.application.dao.mapper.ApplicationMapper">
    <resultMap id="application" type="com.lab.hosaily.core.application.entity.Application">
        <id     column="id"          property="id"         javaType="java.lang.String"/>
        <result column="name"        property="name"       javaType="java.lang.String"/>
        <result column="app_id"      property="appId"      javaType="java.lang.String"/>
        <result column="secret"      property="secret"     javaType="java.lang.String"/>
        <result column="aes_key"     property="aesKey"     javaType="java.lang.String"/>
        <result column="token"       property="token"      javaType="java.lang.String"/>
        <result column="type"        property="type"       typeHandler="typeHandler"/>
        <result column="state"       property="state"      typeHandler="usingStateHandler"/>
        <result column="is_delete"   property="isDelete"   javaType="java.lang.Boolean"/>
        <result column="create_time" property="createTime" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date"/>
        <result column="delete_time" property="deleteTime" javaType="java.util.Date"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCreiterions != null and params.andCreiterions.size > 0">
                <foreach collection="params.andCreiterions" item="criterion" separator="AND">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCreiterions != null and params.orCreiterions.size > 0">
                <foreach collection="params.orCreiterions" item="criterion" separator="AND">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO application (
              id,
              name,
              app_id,
              secret,
              aes_key,
              token,
              type,
              state,
              is_delete,
              create_time
          ) VALUE (
              #{id,         jdbcType=VARCHAR},
              #{name,       jdbcType=VARCHAR},
              #{appId,      jdbcType=VARCHAR},
              #{secret,     jdbcType=VARCHAR},
              #{aesKey,     jdbcType=VARCHAR},
              #{token,      jdbcType=VARCHAR},
              #{type,       typeHandler=typeHander},
              #{state,      typeHandler=usingSatetHandler},
              #{isDelete,   jdbcType=BOOLEAN},
              #{createTime, jdbcType=TIMESTAMP}
          )
    </insert>

    <update id="update">
        UPDATE application
         <set>
             <if test="name != null and name != ''">
                 name = #{name, jdbcType=VARCHAR},
             </if>
             <if test="appId != null and appId != ''">
                 app_id = #{appId, jdbcType=VARCHAR},
             </if>
             <if test="secret != null and secret != ''">
                 secret = #{secret, jdbcType=VARCHAR},
             </if>
             <if test="aesKey != null and aesKey != ''">
                 aes_key = #{aesKey, jdbcType=VARCHAR},
             </if>
             <if test="token != null and token != ''">
                 token = #{token, jdbcType=VARCHAR},
             </if>
             <if test="type != null">
                 type = #{type, typeHandler=typeHandler},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="isDelete != null">
                 is_delete = #{isDelete, jdbcType=BOOLEAN},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
             <if test="deleteTime != null">
                 delete_time = #{deleteTime, jdbcType=TIMESTAMP},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <update id="delete">
        UPDATE application
           SET is_delete = TRUE,
               delete_time = NOW()
         WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="application">
        SELECT *
          FROM application
        <if test="params != null">
            <include refid="SELECT_COLUMN"/>
        </if>
    </select>

    <select id="findByParams" resultMap="application">
        SELECT *
          FROM application
        <if test="params != null">
            <include refid="SELECT_COLUMN"/>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM application
        <if test="params != null">
            <include refid="SELECT_COLUMN"/>
        </if>
    </select>
</mapper>