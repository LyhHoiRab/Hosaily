<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.product.dao.mapper.ProductMapper">
    <resultMap id="product" type="com.lab.hosaily.core.product.entity.Product">
        <id     column="id"              property="id"              javaType="java.lang.String"/>
        <result column="organization_id" property="organizationId"  javaType="java.lang.String"/>
        <result column="name"            property="name"            javaType="java.lang.String"/>
        <result column="price"           property="price"           javaType="java.lang.Double"/>
        <result column="duration"        property="duration"        javaType="java.lang.Double"/>
        <result column="state"           property="state"           typeHandler="usingStateHandler"/>
        <result column="create_time"     property="createTime"      javaType="java.util.Date"/>
        <result column="update_time"     property="updateTime"      javaType="java.util.Date"/>
        <collection property="services" resultMap="service" columnPrefix="s_"/>
    </resultMap>

    <resultMap id="service" type="com.lab.hosaily.core.product.entity.Service">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
        <result column="master_id"      property="masterId"     javaType="java.lang.String"/>
        <result column="name"           property="name"         javaType="java.lang.String"/>
        <result column="description"    property="description"  javaType="java.lang.String"/>
        <result column="time"           property="time"         javaType="java.lang.Integer"/>
        <result column="unit_price"     property="unitPrice"    javaType="java.lang.Double"/>
        <result column="type"           property="type"         typeHandler="serviceTypeHandler"/>
        <result column="sort"           property="sort"         javaType="java.lang.Integer"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCriterions != null and params.andCriterions.size > 0">
                <foreach collection="params.andCriterions" item="criterion">
                    <trim prefix="AND (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCriterions != null and params.orCriterions.size > 0">
                <foreach collection="params.orCriterions" item="criterion">
                    <trim prefix="OR (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO product (
               id,
               organization_id,
               name,
               price,
               duration,
               state,
               create_time
        ) VALUE (
               #{id,              jdbcType=VARCHAR},
               #{organizationId,  jdbcType=VARCHAR},
               #{name,            jdbcType=VARCHAR},
               #{price,           jdbcType=DOUBLE},
               #{duration,        jdbcType=DOUBLE},
               #{state,           typeHandler=usingStateHandler},
               #{createTime,      jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update">
        UPDATE product
         <set>
             <if test="organizationId != null and organizationId != ''">
                 organization_id = #{organizationId, jdbcType=VARCHAR},
             </if>
             <if test="name != null">
                 name = #{name, jdbcType=VARCHAR},
             </if>
             <if test="price != null and price >= 0">
                 price = #{price, jdbcType=DOUBLE},
             </if>
             <if test="duration != null and duration >= 0">
                 duration = #{duration, jdbcType=DOUBLE},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="product">
        SELECT p.*,
               s.id           AS s_id,
               s.master_id    AS s_master_id,
               s.name         AS s_name,
               s.description  AS s_description,
               s.time         AS s_time,
               s.unit_price   AS s_unit_price,
               s.type         AS s_type,
               s.sort         AS s_sort
          FROM product p
     LEFT JOIN service s
            ON s.master_id = p.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="findByParams" resultMap="product">
        SELECT p.*,
               s.id           AS s_id,
               s.master_id    AS s_master_id,
               s.name         AS s_name,
               s.description  AS s_description,
               s.time         AS s_time,
               s.unit_price   AS s_unit_price,
               s.type         AS s_type,
               s.sort         AS s_sort
          FROM product p
     LEFT JOIN service s
            ON s.master_id = p.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="findIdByParams" resultType="java.lang.String">
        SELECT p.id
          FROM product p
     LEFT JOIN service s
            ON s.master_id = p.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM product p
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>
</mapper>