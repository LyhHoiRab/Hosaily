<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.account.dao.mapper.UserMapper">
    <resultMap id="user" type="com.rab.babylon.core.account.entity.User">
        <id     column="id"           property="id"         javaType="java.lang.String"/>
        <result column="account_id"   property="accountId"  javaType="java.lang.String"/>
        <result column="nickname"     property="nickname"   javaType="java.lang.String"/>
        <result column="name"         property="name"       javaType="java.lang.String"/>
        <result column="id_card"      property="idCard"     javaType="java.lang.String"/>
        <result column="sex"          property="sex"        typeHandler="sexHandler"/>
        <result column="birthday"     property="birthday"   javaType="java.util.Date"/>
        <result column="phone"        property="phone"      javaType="java.lang.String"/>
        <result column="position"     property="position"   javaType="java.lang.String"/>
        <result column="head_img_url" property="headImgUrl" javaType="java.lang.String"/>
        <result column="state"        property="state"      typeHandler="usingStateHandler"/>
        <result column="is_delete"    property="isDelete"   javaType="java.lang.Boolean"/>
        <result column="create_time"  property="createTime" javaType="java.util.Date"/>
        <result column="update_time"  property="updateTime" javaType="java.util.Date"/>
        <result column="delete_time"  property="deleteTime" javaType="java.util.Date"/>
        <collection property="expands" resultMap="userExpand" columnPrefix="e_"/>
    </resultMap>

    <resultMap id="userExpand" type="com.rab.babylon.core.account.entity.UserExpand">
        <id     column="id"           property="id"         javaType="java.lang.String"/>
        <result column="user_id"      property="userId"     javaType="java.lang.String"/>
        <result column="name"         property="name"       javaType="java.lang.String"/>
        <result column="value"        property="value"      javaType="java.lang.String"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCreiterions != null and params.andCreiterions.size > 0">
                <foreach collection="params.andCreiterions" item="criterion" separator="AND">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCreiterions != null and params.orCreiterions.size > 0">
                <foreach collection="params.orCreiterions" item="criterion" separator="OR">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO user (
              id,
              account_id,
              nickname,
              name,
              id_card,
              sex,
              birthday,
              head_img_url,
              phone,
              position,
              state,
              is_delete,
              create_time
          ) VALUE (
              #{id,         jdbcType=VARCHAR},
              #{accountId,  jdbcType=VARCHAR},
              #{nickname,   jdbcType=VARCHAR},
              #{name,       jdbcType=VARCHAR},
              #{idCard,     jdbcType=VARCHAR},
              #{sex,        typeHandler=sexHandler},
              #{birthday,   jdbcType=TIMESTAMP},
              #{headImgUrl, jdbcType=VARCHAR},
              #{phone,      jdbcType=VARCHAR},
              #{position,   jdbcType=VARCHAR},
              #{state,      typeHandler=usingStateHandler},
              #{isDelete,   jdbcType=BOOLEAN},
              #{createTime, jdbcType=TIMESTAMP}
          )
    </insert>

    <update id="update">
        UPDATE user
         <set>
             <if test="nickname != null and nickname != ''">
                 nickname = #{nickname, jdbcType=VARCHAR},
             </if>
             <if test="name != null and name != ''">
                 name = #{name, jdbcType=VARCHAR},
             </if>
             <if test="idCard != null and idCard != ''">
                 id_card = #{idCard, jdbcType=VARCHAR},
             </if>
             <if test="sex != null">
                 sex = #{sex, typeHandler=sexHandler},
             </if>
             <if test="birthday != null">
                 birthday = #{birthday, jdbcType=TIMESTAMP},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="headImgUrl != null and headImgUrl != ''">
                 head_img_url = #{headImgUrl, jdbcType=VARCHAR},
             </if>
             <if test="isDelete != null">
                 is_delete = #{isDelete, jdbcType=BOOLEAN},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
             <if test="deleteTime != null">
                 delete_time = #{deleteTime, jdbcType=TIMESTAMP},
             </if>
             <if test="phone != null and phone != ''">
                 phone = #{phone, jdbcType=VARCHAR},
             </if>
             <if test="position != null and position != ''">
                 position = #{position, jdbcType=VARCHAR},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="user">
        SELECT u.*,
               e.id          AS e_id,
               e.user_id     AS e_user_id,
               e.name        AS e_name,
               e.value       AS e_value,
               e.description AS e_description
          FROM user u
     LEFT JOIN user_expand e
            ON e.user_id = u.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="findByParams" resultMap="user">
        SELECT u.*,
               e.id          AS e_id,
               e.user_id     AS e_user_id,
               e.name        AS e_name,
               e.value       AS e_value,
               e.description AS e_description
          FROM user u
     LEFT JOIN user_expand e
            ON e.user_id = u.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM user
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>
</mapper>