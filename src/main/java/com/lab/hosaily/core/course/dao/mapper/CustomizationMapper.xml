<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.course.dao.mapper.CustomizationMapper">
    <resultMap id="customization" type="com.lab.hosaily.core.course.entity.Customization">
        <id     column="id"           property="id"           javaType="java.lang.String"/>
        <result column="cover"        property="cover"        javaType="java.lang.String"/>
        <result column="title"        property="title"        javaType="java.lang.String"/>
        <result column="summary"      property="summary"      javaType="java.lang.String"/>
        <result column="introduction" property="introduction" javaType="java.lang.String"/>
        <result column="subscribe"    property="subscribe"    javaType="java.lang.Integer"/>
        <result column="sort"         property="sort"         javaType="java.lang.Integer"/>
        <result column="state"        property="state"        typeHandler="usingStateHandler"/>
        <result column="create_time"  property="createTime"   javaType="java.util.Date"/>
        <result column="update_time"  property="updateTime"   javaType="java.util.Date"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCreiterions != null and params.andCreiterions.size > 0">
                <foreach collection="params.andCreiterions" item="criterion" separator="AND">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCreiterions != null and params.orCreiterions.size > 0">
                <foreach collection="params.orCreiterions" item="criterion" separator="OR">
                    <trim prefix="(" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.criterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="criterion.operator">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
                                                    #{listItem}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO customization (
               id,
               cover,
               title,
               summary,
               introduction,
               subscribe,
               sort,
               state,
               create_time
        ) VALUE (
               #{id,           jdbcType=VARCHAR},
               #{cover,        jdbcType=VARCHAR},
               #{title,        jdbcType=VARCHAR},
               #{summary,      jdbcType=VARCHAR},
               #{introduction, jdbcType=VARCHAR},
               #{subscribe,    jdbcType=INTEGER},
               #{sort,         jdbcType=INTEGER},
               #{state,        typeHandler=usingStateHandler},
               #{createTime,   jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update">
        UPDATE customization
         <set>
             <if test="cover != null and cover != ''">
                 cover = #{cover, jdbcType=VARCHAR},
             </if>
             <if test="title != null and title != ''">
                 summary = #{summary, jdbcType=VARCHAR},
             </if>
             <if test="subscribe != null and subscribe >= 0">
                 subscribe = #{subscribe, jdbcType=INTEGER},
             </if>
             <if test="sort != null and sort >= 0">
                 sort = #{sort, jdbcType=INTEGER},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
             <if test="introduction != null and introduction != ''">
                 introduction = #{introduction, jdbcType=VARCHAR},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="customization">
        SELECT *
          FROM customization
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="findByParams" resultMap="customization">
        SELECT *
          FROM customization
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM customization
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>
</mapper>