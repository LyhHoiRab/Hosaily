<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lab.hosaily.core.client.dao.mapper.PurchaseMapper">
    <resultMap id="purchase" type="com.lab.hosaily.core.client.entity.Purchase">
        <id     column="id"                 property="id"               javaType="java.lang.String"/>
        <result column="account_id"         property="accountId"        javaType="java.lang.String"/>
        <result column="organization_id"    property="organizationId"   javaType="java.lang.String"/>
        <result column="order_time"         property="orderTime"        javaType="java.util.Date"/>
        <result column="state"              property="state"            typeHandler="usingStateHandler"/>
        <result column="purchase_state"     property="purchaseState"    typeHandler="purchaseStateHandler"/>
        <result column="sales_account_id"   property="salesAccountId"   javaType="java.lang.String"/>
        <result column="sales_user_id"      property="salesUserId"      javaType="java.lang.String"/>
        <result column="create_time"        property="createTime"       javaType="java.util.Date"/>
        <result column="update_time"        property="updateTime"       javaType="java.util.Date"/>
        <association property="agreement" resultMap="agreement" columnPrefix="a_"/>
    </resultMap>

    <resultMap id="agreement" type="com.lab.hosaily.core.client.entity.Agreement">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
    </resultMap>

    <resultMap id="service" type="com.lab.hosaily.core.product.entity.Service">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
    </resultMap>

    <sql id="WHERE_COLUMN">
        <where>
            <if test="params.andCriterions != null and params.andCriterions.size > 0">
                <foreach collection="params.andCriterions" item="criterion">
                    <trim prefix="AND (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCriterions != null and params.orCriterions.size > 0">
                <foreach collection="params.orCriterions" item="criterion">
                    <trim prefix="OR (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} $criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT
          INTO purchase (
               id,
               account_id,
               organization_id,
               order_time,
               state,
               create_time,
               purchase_state,
               sales_account_id,
               sales_user_id
        ) VALUE (
               #{id,              jdbcType=VARCHAR},
               #{accountId,       jdbcType=VARCHAR},
               #{organizationId,  jdbcType=VARCHAR},
               #{orderTime,       jdbcType=TIMESTAMP},
               #{state,           typeHandler=usingStateHandler},
               #{createTime,      jdbcType=TIMESTAMP},
               #{purchaseState,   typeHandler=purchaseStateHandler},
               #{salesAccountId,  jdbcType=VARCHAR},
               #{salesUserId,     jdbcType=VARCHAR}
        )
    </insert>

    <update id="update">
        UPDATE purchase
         <set>
             <if test="accountId != null and accountId != ''">
                 account_id = #{accountId, jdbcType=VARCHAR},
             </if>
             <if test="salesAccountId != null">
                 sales_account_id = #{salesAccountId, jdbcType=VARCHAR},
             </if>
             <if test="salesUserId != null">
                 sales_user_id = #{salesUserId, jdbcType=VARCHAR},
             </if>
             <if test="organizationId != null and organizationId != ''">
                 organization_id = #{organizationId, jdbcType=VARCHAR},
             </if>
             <if test="orderTime != null">
                 order_time = #{orderTime, jdbcType=TIMESTAMP},
             </if>
             <if test="state != null">
                 state = #{state, typeHandler=usingStateHandler},
             </if>
             <if test="updateTime != null">
                 update_time = #{updateTime, jdbcType=TIMESTAMP},
             </if>
             <if test="purchaseState != null">
                 purchase_state = #{purchaseState, typeHandler=purchaseStateHandler},
             </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="getByParams" resultMap="purchase">
        SELECT p.*,
               a.id AS a_id,
               s.id AS s_id
          FROM purchase p
     LEFT JOIN agreement a
            ON a.purchase_id = p.id
     LEFT JOIN service s
            ON s.master_id = a.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>
        </if>
    </select>

    <select id="findIdByParams" resultType="java.lang.String">
        SELECT p.id,
               a.id AS a_id,
               s.id AS s_id
          FROM purchase p
     LEFT JOIN agreement a
            ON a.purchase_id = p.id
     LEFT JOIN service s
            ON s.master_id = a.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="findByParams" resultMap="purchase">
        SELECT p.*,
               a.id AS a_id,
               s.id AS s_id
          FROM purchase p
     LEFT JOIN agreement a
            ON a.purchase_id = p.id
     LEFT JOIN service s
            ON s.master_id = a.id
        <if test="params != null">
            <include refid="WHERE_COLUMN"/>

            <if test="params.groups != null and params.groups.size > 0">
                GROUP BY
                <foreach collection="params.groups" item="group" separator=",">
                    ${group.property}
                </foreach>
            </if>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>
        </if>
    </select>

    <select id="countByParams" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM (
                    SELECT p.id
                      FROM purchase p
                 LEFT JOIN agreement a
                        ON a.purchase_id = p.id
                 LEFT JOIN service s
                        ON s.master_id = a.id
                    <if test="params != null">
                        <include refid="WHERE_COLUMN"/>

                        <if test="params.groups != null and params.groups.size > 0">
                            GROUP BY
                            <foreach collection="params.groups" item="group" separator=",">
                                ${group.property}
                            </foreach>
                        </if>
                    </if>
        ) AS purchase
    </select>
</mapper>